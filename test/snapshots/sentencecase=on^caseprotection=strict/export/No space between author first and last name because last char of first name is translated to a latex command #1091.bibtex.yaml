comments: []
entries:
  - fields:
      abstract: >-
        The Boogie Verification Debugger (BVD) is a tool that lets users explore
        the potential program errors reported by a deductive program verifier.
        The user interface is like that of a dynamic debugger, but the debugging
        happens statically without executing the program. BVD integrates with
        the programverification engine Boogie. Just as Boogie supports multiple
        language front-ends, BVD can work with those front-ends through a
        plug-in architecture. BVD plugins have been implemented for two
        state-of-the-art verifiers, VCC and Dafny.
      author:
        - firstName: Claire Le
          lastName: Goues
        - firstName: Michał
          lastName: Moskal
        - firstName: Michał
          lastName: Moskal
      language: en
      note: >-
        <a
        href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/krml213.pdf">https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/krml213.pdf</a>
      title: The <span class="nocase">Boogie Verification Debugger</span>
      year: '2011'
    input: |-
      @article{bvd2011,
        title = {The {{Boogie Verification Debugger}}},
        author = {Goues, Claire Le and Moskal, Micha{\l} and Moskal, Micha{\l}},
        year = {2011},
        abstract = {The Boogie Verification Debugger (BVD) is a tool that lets users explore the potential program errors reported by a deductive program verifier. The user interface is like that of a dynamic debugger, but the debugging happens statically without executing the program. BVD integrates with the programverification engine Boogie. Just as Boogie supports multiple language front-ends, BVD can work with those front-ends through a plug-in architecture. BVD plugins have been implemented for two state-of-the-art verifiers, VCC and Dafny.},
        language = {en},
        note = {\url{https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/krml213.pdf}}
      }
    key: bvd2011
    mode:
      abstract: literal
      author: creatorlist
      language: literal
      note: richtext
      title: title
      year: literal
    type: article
errors: []
jabref:
  groups: {}
  root: []
preamble: []
strings: {}
