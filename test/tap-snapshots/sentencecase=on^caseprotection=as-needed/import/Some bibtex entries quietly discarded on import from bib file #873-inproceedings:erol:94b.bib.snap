/* IMPORTANT
 * This snapshot file is auto-generated, but designed for humans.
 * It should be checked into source control and tracked carefully.
 * Re-generate by setting TAP_SNAPSHOT=1 and running tests.
 * Make sure to inspect the output below.  Do not ignore changes!
 */
'use strict'
exports[`test/all.js > TAP > import=Some bibtex entries quietly discarded on import from bib file #873-inproceedings:erol:94b.bib > must match snapshot 1`] = `
Object {
  "comments": Array [],
  "entries": Array [
    Object {
      "fields": Object {
        "annote": Array [
          "Erol, et. al. discuss the complexity and expressivity of HTN planning based on their UMCP planning. They show that HTN planning is strictly more expressive than simple STRIPS planning. The reason HTN planning is more expressive is that having a goal task network instead of a propositional goal allows the user of the system to specify not just what is to be achieved, but some aspects of how it is to be achieved. They use the example that in an HTN planner one can specify the goal of “build a house,” as distinct from simply “own a house,” which could also be satisfied by “buy a house.” As far as expressivity is concerned, HTN planning in the general case is undecidable. Forcing HTNs to be totally-ordered sets of tasks or removing variables from the tasks can reduce the complexity.",
        ],
        "author": Array [
          Object {
            "firstName": "Kutluhan",
            "lastName": "Erol",
          },
          Object {
            "firstName": "James",
            "lastName": "Hendler",
          },
          Object {
            "firstName": "Dana S.",
            "lastName": "Nau",
          },
        ],
        "crossref": Array [
          "AAAI94",
        ],
        "pages": Array [
          "1123–1128",
        ],
        "title": Array [
          "HTN planning: Complexity and expressivity",
        ],
      },
      "key": "Erol:94b",
      "type": "inproceedings",
    },
  ],
  "errors": Array [],
  "jabref": Object {
    "groups": Object {},
    "root": Array [],
  },
  "preamble": Array [],
  "strings": Object {},
}
`
