/* IMPORTANT
 * This snapshot file is auto-generated, but designed for humans.
 * It should be checked into source control and tracked carefully.
 * Re-generate by setting TAP_SNAPSHOT=1 and running tests.
 * Make sure to inspect the output below.  Do not ignore changes!
 */
'use strict'
exports[`test/all.js > TAP > import=Some bibtex entries quietly discarded on import from bib file #873-article:etzioni-etal:1997a.bib > must match snapshot 1`] = `
Object {
  "comments": Array [],
  "entries": Array [
    Object {
      "fields": Object {
        "acontentnote": "Abstract: Closed-world inference-an essential component of many planning algorithms-is the process of determining that a logical sentence is false based on its absence from a knowledge base, or the inability to derive it. We describe a novel method for closed-world inference and update over the first-order theories of action used by planning algorithms such as NONLIN, TWEAK, and UCPOP. We show the method to be sound and efficient, but incomplete. In our experiments, closed-world inference consistently averaged about 2 milliseconds while updates averaged approximately 1.2 milliseconds. Furthermore, we demonstrate that incompleteness is nonproblematic in practice, since our mechanism makes over 99incorporated our method into the XII planner, which supports our Internet Softbot (software robot). The technique cut the number of actions executed by the Softbot by a factor of one hundred, and resulted in a corresponding speedup to XII.",
        "author": Array [
          Object {
            "firstName": "Oren",
            "lastName": "Etzioni",
          },
          Object {
            "firstName": "Keith",
            "lastName": "Golden",
          },
          Object {
            "firstName": "Daniel S.",
            "lastName": "Weld",
          },
        ],
        "journal": "AIJ",
        "number": "1–2",
        "pages": "113–148",
        "title": "Sound and Efficient Closed-World Reasoning for Planning",
        "topic": "planning;circumscription;closed-world-reasoning;",
        "volume": "89",
        "year": "1997",
      },
      "input": String(
        @Article{Etzioni-etal:1997a,
          author =\\t"Oren Etzioni and Keith Golden and Daniel S. Weld",
          title =\\t"Sound and Efficient Closed-World Reasoning for
        \\t\\t Planning",
          journal =\\tAIJ,
          year = \\t"1997",
          volume =\\t"89",
          number =\\t"1--2",
          pages =\\t"113--148",
          acontentnote = "Abstract: Closed-world inference-an essential
        \\t\\t component of many planning algorithms-is the process of
        \\t\\t determining that a logical sentence is false based on
        \\t\\t its absence from a knowledge base, or the inability to
        \\t\\t derive it. We describe a novel method for closed-world
        \\t\\t inference and update over the first-order theories of
        \\t\\t action used by planning algorithms such as NONLIN,
        \\t\\t TWEAK, and UCPOP. We show the method to be sound and
        \\t\\t efficient, but incomplete. In our experiments,
        \\t\\t closed-world inference consistently averaged about 2
        \\t\\t milliseconds while updates averaged approximately 1.2
        \\t\\t milliseconds. Furthermore, we demonstrate that
        \\t\\t incompleteness is nonproblematic in practice, since our
        \\t\\t mechanism makes over 99% of the desired inferences. We
        \\t\\t incorporated our method into the XII planner, which
        \\t\\t supports our Internet Softbot (software robot). The
        \\t\\t technique cut the number of actions executed by the
        \\t\\t Softbot by a factor of one hundred, and resulted in a
        \\t\\t corresponding speedup to XII.",
          topic =\\t"planning;circumscription;closed-world-reasoning;",
        }
      ),
      "key": "Etzioni-etal:1997a",
      "type": "article",
    },
  ],
  "errors": Array [
    Object {
      "error": "Unresolved @string reference \\"AIJ\\"",
      "input": "AIJ",
    },
  ],
  "jabref": Object {
    "groups": Object {},
    "root": Array [],
  },
  "preamble": Array [],
  "strings": Object {},
}
`
