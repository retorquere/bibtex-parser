/* IMPORTANT
 * This snapshot file is auto-generated, but designed for humans.
 * It should be checked into source control and tracked carefully.
 * Re-generate by setting TAP_SNAPSHOT=1 and running tests.
 * Make sure to inspect the output below.  Do not ignore changes!
 */
'use strict'
exports[`test/all.js > TAP > import=Some bibtex entries quietly discarded on import from bib file #873-techreport:mccluskey99:_ocl.bib > must match snapshot 1`] = `
Object {
  "comments": Array [
  ],
  "entries": Array [
    Object {
      "fields": Object {
        "annote": Array [
          "Contains a description of the typed, object-oriented, language for HTN planners. The work is interesting and offers checking to make sure that transitions are well-founded, in terms of the objects that make up the domain. Somewhat limited, however, in terms of the richness of the object hierarchy, and the sorts of things that an HTN method is allowed to do. There's a discussion of how OCL<span class=\\"nocase\\">ₕ</span> could be used to formalize O-Plan operators.",
        ],
        "author": Array [
          Object {
            "firstName": "T. L.",
            "lastName": "McCluskey",
          },
          Object {
            "firstName": "P.",
            "lastName": "Jarvis",
          },
          Object {
            "firstName": "D. E.",
            "lastName": "Kitchin",
          },
        ],
        "institution": Array [
          "Department of Computer Science, The University of Huddersfield",
        ],
        "title": Array [
          "OCLₕ: a sound and supportive planning domain modelling language",
        ],
        "year": Array [
          1999,
        ],
      },
      "key": "mccluskey99:_ocl",
      "type": "techreport",
    },
  ],
  "errors": Array [
  ],
  "jabref": Object {
    "groups": Object {},
    "root": Array [],
  },
  "preamble": Array [],
  "strings": Object {},
}
`
